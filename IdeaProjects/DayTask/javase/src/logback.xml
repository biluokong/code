<?xml version="1.0" encoding="UTF-8" ?>
<configuration>
    <!-- CONSOLE：表示当前的日志信息输出到控制台 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 输出流对象 默认 System.out 可以改为 System.err(会在输出台输入红色信息) -->
        <target>System.out</target>
        <encoder>
            <!-- 格式化输出：%d表示日期、%thread表示线程名、%-5level：级别从左到右显示5个字符宽度、%msg：日志消息、%n是换行符 -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} {%-5level}  %c [%thread] : %msg%n</pattern>
        </encoder>
    </appender>

    <!-- File 让输出的方向为文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
            <charset>utf-8</charset>
        </encoder>
        <!-- 日志输出路径 -->
        <file>G:/all/IdeaProjects/DayTask/javase/log/javase.log</file>
        <!-- 指定日志文件拆分和压缩规则 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 通过指定压缩文件名称，来确定分割文件方式 -->
            <fileNamePattern>G:/all/IdeaProjects/DayTask/javase/log/javase-%d{yyyy-MMdd}.log%i.gz</fileNamePattern>
            <!-- 文件拆分大小 -->
            <maxFileSize>1MB</maxFileSize>
        </rollingPolicy>
    </appender>
    <!--
        level：设置打印级别，默认debug；大小写谁便(选择前面的还可以出现后面的，反之不行)：
               all < trace < debug < info < warn < error < off
        <root>可以包含零个或多个<appender-ref>元素，标识这个输出位置将会被本日志级别控制
    -->
    <root level="debug">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
    </root>
</configuration>

