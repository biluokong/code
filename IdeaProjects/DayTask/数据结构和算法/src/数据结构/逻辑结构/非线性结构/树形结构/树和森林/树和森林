
1、树的储存结构

        （1）双亲表示法：结点包含数据域和指向双亲的双亲域（数组表示） 特点：找双亲容易，找孩子难

        （2）孩子链表
                把每个结点的孩子结点排列起来，看成是一个线性表，用单链表储存；则n个结点有n个孩子链表(叶子的孩子链表为空表)
                每个孩子链表的头指针又组成一个线性表，用顺序表储存
                孩子结点结构：child next；双亲结点结构：data firstChild(指向孩子的指针)
                    特点：找孩子容易，找双亲难

        （3）带双亲的孩子链表：把上面两种储存方式结合起来，从而让无论找双亲还是孩子有变得容易

        （4）孩子兄弟表示法（二叉树表示法，二叉链表表示法）：用二叉链表作数的储存结构，链表中每个结点的两个指针域分别指向其第一个孩子结点和下一个兄弟结点

2、数的处理方法：将数转化为二叉树进行处理，利用二叉树的算法来实现对树的操作
        （1）原理：由于树和二叉树都可以用二叉树作为储存结构，则可以以二叉链表作媒介来导出树与二叉树之间的一个对应关系
        （2）方法：①加线：在兄弟之间加一条线     ②抹线：对每一个结点，除了其左孩子外，去除其与孩子之间的关系      ③旋转：以树的根结点为轴心，将整个树顺时针转45°
                 口诀：兄弟相连留长子
        （3）补充：二叉树转换为树
                    ①加线：若p结点是双亲结点的左孩子，则将p的右孩子，右孩子的右孩子……都与p的双亲用线连起来      ②抹线：抹掉原二叉树中的双亲与右孩子之间的连线     ③调整：将结点按层次排列，形成树结构
                    口诀：左孩子右右相连，去掉原来右孩线

3、森林与二叉树的转换
        （1）方法：①将各棵树分别转换成二叉树     ②将每棵树的根结点用线相连       ③以第一棵树根结点为二叉树的根，再以根结点为轴心，顺时针旋转(45°)，构成二叉树型结构
                    口诀：树变二叉根相连
        （2）补充：二叉树转换成森林
                    ①抹线：将二叉树中根结点与其右孩子连线，及沿右分支搜索到的所有右孩子间连线全部抹掉，使之变为孤立的二叉树     ②还原：将孤立的二叉树还原成树
                    口诀：去掉全部右孩线，孤立二叉再还原

4、树与森林的遍历
        （1）树的遍历：①先根(次序)遍历：若树不为空，则先访问根结点，然后依次先根遍历各棵子树   ②后根(次序)：若树不为空，则先依次后根遍历各棵子树，然后再访问根结点      ③按层次遍历：若树不为空，自上而下自左而右访问树中每个结点

        （2）森林的遍历：
                将森林看作由三部分构成：①森林中第一棵树的根结点    ②森林中第一棵树的子树森林   ③森林中其它树构成的森林
                三种方法：
                        先序遍历：①访问森林中第一棵树的根结点     ②先序遍历森林中第一棵树的子树森林   ③先序遍历森林中(除第一棵树之外)其余树构成的森林   即依序从左至右对森林中的每一棵树进行先根遍历
                        中序遍历：①中序遍历森林中第一棵树的子树森林     ②访问森林中第一棵树的根结点   ③中序遍历森林中(除第一棵树之外)其余树构成的森林   即依序从左至右对森林中的每一棵树进行后根遍历