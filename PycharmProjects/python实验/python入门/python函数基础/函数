1、函数基础：
    （1）函数定义：
        def 函数名(参数列表):      （参数列表：0-n个）
            代码块

    （2）函数调用：
        函数名()

    （3）函数说明文档：函数内容的第一行可以用字符串进行函数说明

    （4）参数的分类：必选参数、默认参数(缺省参数)、可选参数、关键字参数。（选可写成变）
            注意：
                ●可选参数必须放在关键字可选参数之前
                ●可选参数接受的数据是一个元组类型
                ●给关键字可选参数接受数据的是一个字典类型

2、函数返回值
    （1）概念：函数执行完后返回一个对象；如果在函数的内部有return，就可以返回实际的值，否则返回的None
    （2）返回值类型：可以返回任意类型，返回值类型取决于return后面的类型
    （3）用途：给调用方返回数据
    （4）注意：
            ●在一个函数体内可以出现多个return，但是最终只能返回一个return返回的值
            ●return一执行，函数结束，后面的代码不再执行

3、函数的4种基本类型：
    ●无参数无返回值：一般用于提示信息打印
    ●无参数有返回值：多用在数据采集中，比如获取系统信息
    ●有参数无返回值：多用在设置某些不需要返回值的参数设置
    ●有参数有返回值：一般是计算型的，需参数，最终也要返回结果

4、局部变量和全局变量
    （1）作用域越小，优先级越高：当函数内部变量名与全局变量名重名时，在函数内部使用的还是函数自己定义的局部变量，全局变量的值并不会改变
    （2）在函数内修改全局变量：先用在函数内“global 变量名”声明，再修改就可以了

5、引用：
    （1）python里万物皆对象，所有变量也是对象，传递的都是引用（内存地址）
    （2）变量名的内存开辟在栈内，用来储存对象的地址（引用）；对象（数据/具体的值）的内存开辟在堆区，存放数据，有一个相应的内存地址（引用）
    （3）不可变类型：比如int、float、元组等等，其数据不能发生改变；一旦其数据发生改变，其变量名存放的内存地址（引用）也就改变了（在堆中开辟了新的内存空间存放新的对象，有了一个新的内存地址）
    （4）可变类型：比如列表、字符串等等，其数据可以发生改变，变量名存放的内存地址不发生变化，除非创建新的对象，并进行赋值。

6、匿名函数：python中使用lambda关键字创建匿名函数，由于这个函数没有名字，所以不能用def关键字创建
    （1）语法：lambda 参数1，参数2，参数3...:执行语句(此语句只能一个)
    （2）可用一个变量等于匿名函数，之后此变量即相当于匿名函数的函数名，可通过此变量来调用匿名函数。（实际上此变量名存放了匿名函数的内存地址，此变量可通过函数的内存地址去调用它）
    （3）也可直接调用匿名函数，方法：（lambda 参数1，参数2...: 执行语句）（实参1，实参2...）
    （4）匿名函数自带return，返回语句执行的结果，若语句执行后没有结果（如输出语句），则返回none
    （5）因为只能有一个语句，所以它只适用于简单逻辑
